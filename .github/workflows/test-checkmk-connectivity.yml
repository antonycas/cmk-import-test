name: Test Checkmk Connectivity
on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
jobs:
  test-checkmk-connectivity:
    runs-on: ubuntu-latest
    steps:
      #- name: Checkout Code
      #  uses: actions/checkout@v4
      #- name: Get Latest Version
      #  id: get-latest-version
      #  run: echo "latest-version=$(./scripts/get-latest-cmk-version.py ${{ inputs.version }})" >> $GITHUB_OUTPUT
      - name: Download Dockerfile Artifact
        uses: actions/download-artifact@v4
        with:
          name: "checkmk-docker-${{ inputs.version }}"
      - name: Load Docker Container
        run: docker load -i check-mk-raw-docker-${{ inputs.version }}.tar.gz
      - name: Run Docker Container
        run: docker container run -dit -p 8080:5000 -p 8000:8000 --tmpfs /opt/omd/sites/cmk/tmp:uid=1000,gid=1000 -v monitoring:/omd/sites --name monitoring -v /etc/localtime:/etc/localtime:ro --restart always checkmk/check-mk-raw:${{ inputs.version }}
      - name: Sleep to Allow Site Setup
        run: sleep 45s
        shell: bash
      - name: Output CMK URL
        id: get-cmk-url
        run: echo "cmk-url=$(docker container logs monitoring | grep 'The default web UI is available at' | cut -d ' ' -f 10)" >> $GITHUB_OUTPUT
      - name: Output Automation Secret
        id: output-automation-secret
        run: echo "automation-secret=$(docker exec monitoring sh -c 'cat /opt/omd/sites/cmk/var/check_mk/web/automation/automation.secret')" >> $GITHUB_OUTPUT
      - name: Test CheckMK Connectivity
        run: "curl http://localhost:8080/cmk/check_mk/api/1.0/domain-types/host_config/collections/all --header 'Authorization: Bearer automation ${{ steps.output-automation-secret.outputs.automation-secret }}' --header 'Accept: application/json'" 